/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DestinationMinter,
  DestinationMinterInterface,
} from "../../contracts/DestinationMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintCallSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "enum DestinationMinter.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum DestinationMinter.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "setWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routerAddr",
        type: "address",
      },
    ],
    name: "updateRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620025e3380380620025e3833981810160405281019062000037919062000501565b82338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a490620005be565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001345762000133816200036860201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001ac5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620001a39190620005f1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a05173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016200031892919062000629565b6020604051808303816000875af115801562000338573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035e919062000693565b5050505062000737565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003d09062000715565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004c9826200049c565b9050919050565b620004db81620004bc565b8114620004e757600080fd5b50565b600081519050620004fb81620004d0565b92915050565b6000806000606084860312156200051d576200051c62000497565b5b60006200052d86828701620004ea565b93505060206200054086828701620004ea565b92505060406200055386828701620004ea565b9150509250925092565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620005a66018836200055d565b9150620005b3826200056e565b602082019050919050565b60006020820190508181036000830152620005d98162000597565b9050919050565b620005eb81620004bc565b82525050565b6000602082019050620006086000830184620005e0565b92915050565b6000819050919050565b62000623816200060e565b82525050565b6000604082019050620006406000830185620005e0565b6200064f602083018462000618565b9392505050565b60008115159050919050565b6200066d8162000656565b81146200067957600080fd5b50565b6000815190506200068d8162000662565b92915050565b600060208284031215620006ac57620006ab62000497565b5b6000620006bc848285016200067c565b91505092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620006fd6017836200055d565b91506200070a82620006c5565b602082019050919050565b600060208201905081810360008301526200073081620006ee565b9050919050565b60805160a051611e786200076b6000396000818161058101526106a5015260008181610b180152610be80152611e786000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101c3578063b0f479a1146101ee578063c486dac214610219578063c851cc3214610242578063edae876f1461026b578063f2fde38b14610296576100b2565b806301ffc9a7146100b75780633aeac4e1146100f45780634fca83db1461011d57806351cff8d91461015a57806379ba50971461018357806385572ffb1461019a576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100de60048036038101906100d99190611055565b6102bf565b6040516100eb919061109d565b60405180910390f35b34801561010057600080fd5b5061011b60048036038101906101169190611116565b610391565b005b34801561012957600080fd5b50610144600480360381019061013f9190611301565b61049b565b604051610151919061139d565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906113b8565b6108bd565b005b34801561018f57600080fd5b50610198610981565b005b3480156101a657600080fd5b506101c160048036038101906101bc9190611409565b610b16565b005b3480156101cf57600080fd5b506101d8610bbb565b6040516101e59190611461565b60405180910390f35b3480156101fa57600080fd5b50610203610be4565b6040516102109190611461565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b919061147c565b610c0c565b005b34801561024e57600080fd5b50610269600480360381019061026491906113b8565b610cb2565b005b34801561027757600080fd5b50610280610cf6565b60405161028d9190611461565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b891906113b8565b610d1c565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b610399610d30565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d49190611461565b602060405180830381865afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190611519565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610452929190611555565b6020604051808303816000875af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049591906115aa565b50505050565b6000806040518060a00160405280866040516020016104ba9190611461565b6040516020818303038152906040528152602001856040516020016104df9190611656565b6040516020818303038152906040528152602001600067ffffffffffffffff81111561050e5761050d6111b1565b5b60405190808252806020026020018201604052801561054757816020015b610534610fb9565b81526020019060019003908161052c5790505b5081526020016001808111156105605761055f611678565b5b85600181111561057357610572611678565b5b1461057f5760006105a1565b7f00000000000000000000000000000000000000000000000000000000000000005b73ffffffffffffffffffffffffffffffffffffffff1681526020016040518060200160405280600081525081525090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166320487ded89856040518363ffffffff1660e01b8152600401610635929190611892565b602060405180830381865afa158015610652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106769190611519565b905060018081111561068b5761068a611678565b5b85600181111561069e5761069d611678565b5b036107e9577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610720929190611555565b6020604051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076391906115aa565b508173ffffffffffffffffffffffffffffffffffffffff166396f4e9f989856040518363ffffffff1660e01b815260040161079f929190611892565b6020604051808303816000875af11580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e291906118ee565b935061086b565b8173ffffffffffffffffffffffffffffffffffffffff166396f4e9f9828a866040518463ffffffff1660e01b8152600401610825929190611892565b60206040518083038185885af1158015610843573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061086891906118ee565b93505b8767ffffffffffffffff16847f72bf88fdd9d3b2023da1448d9689b4d63d2cffa089fd364b50e6077331986f7c8989856040516108aa9392919061191b565b60405180910390a3505050949350505050565b6108c5610d30565b600047905060008273ffffffffffffffffffffffffffffffffffffffff16826040516108f09061198a565b60006040518083038185875af1925050503d806000811461092d576040519150601f19603f3d011682016040523d82523d6000602084013e610932565b606091505b505090508061097c573383836040517f9d11f5630000000000000000000000000000000000000000000000000000000081526004016109739392919061199f565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0890611a22565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba657336040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401610b9d9190611461565b60405180910390fd5b610bb881610bb390611d0f565b610dc0565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600081604051602401610c1f9190611461565b6040516020818303038152906040527fd9fca769000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610caa8585838661049b565b505050505050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d24610d30565b610d2d81610e8d565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db590611d6e565b60405180910390fd5b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260600151604051610e0d9190611dbf565b6000604051808303816000865af19150503d8060008114610e4a576040519150601f19603f3d011682016040523d82523d6000602084013e610e4f565b606091505b5050905080610e5d57600080fd5b7fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8860405160405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610efb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef290611e22565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61103281610ffd565b811461103d57600080fd5b50565b60008135905061104f81611029565b92915050565b60006020828403121561106b5761106a610ff3565b5b600061107984828501611040565b91505092915050565b60008115159050919050565b61109781611082565b82525050565b60006020820190506110b2600083018461108e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110e3826110b8565b9050919050565b6110f3816110d8565b81146110fe57600080fd5b50565b600081359050611110816110ea565b92915050565b6000806040838503121561112d5761112c610ff3565b5b600061113b85828601611101565b925050602061114c85828601611101565b9150509250929050565b600067ffffffffffffffff82169050919050565b61117381611156565b811461117e57600080fd5b50565b6000813590506111908161116a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111e9826111a0565b810181811067ffffffffffffffff82111715611208576112076111b1565b5b80604052505050565b600061121b610fe9565b905061122782826111e0565b919050565b600067ffffffffffffffff821115611247576112466111b1565b5b611250826111a0565b9050602081019050919050565b82818337600083830152505050565b600061127f61127a8461122c565b611211565b90508281526020810184848401111561129b5761129a61119b565b5b6112a684828561125d565b509392505050565b600082601f8301126112c3576112c2611196565b5b81356112d384826020860161126c565b91505092915050565b600281106112e957600080fd5b50565b6000813590506112fb816112dc565b92915050565b6000806000806080858703121561131b5761131a610ff3565b5b600061132987828801611181565b945050602061133a87828801611101565b935050604085013567ffffffffffffffff81111561135b5761135a610ff8565b5b611367878288016112ae565b9250506060611378878288016112ec565b91505092959194509250565b6000819050919050565b61139781611384565b82525050565b60006020820190506113b2600083018461138e565b92915050565b6000602082840312156113ce576113cd610ff3565b5b60006113dc84828501611101565b91505092915050565b600080fd5b600060a08284031215611400576113ff6113e5565b5b81905092915050565b60006020828403121561141f5761141e610ff3565b5b600082013567ffffffffffffffff81111561143d5761143c610ff8565b5b611449848285016113ea565b91505092915050565b61145b816110d8565b82525050565b60006020820190506114766000830184611452565b92915050565b6000806000806080858703121561149657611495610ff3565b5b60006114a487828801611181565b94505060206114b587828801611101565b93505060406114c6878288016112ec565b92505060606114d787828801611101565b91505092959194509250565b6000819050919050565b6114f6816114e3565b811461150157600080fd5b50565b600081519050611513816114ed565b92915050565b60006020828403121561152f5761152e610ff3565b5b600061153d84828501611504565b91505092915050565b61154f816114e3565b82525050565b600060408201905061156a6000830185611452565b6115776020830184611546565b9392505050565b61158781611082565b811461159257600080fd5b50565b6000815190506115a48161157e565b92915050565b6000602082840312156115c0576115bf610ff3565b5b60006115ce84828501611595565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116115780820151818401526020810190506115f6565b60008484015250505050565b6000611628826115d7565b61163281856115e2565b93506116428185602086016115f3565b61164b816111a0565b840191505092915050565b60006020820190508181036000830152611670818461161d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6116b081611156565b82525050565b600081519050919050565b600082825260208201905092915050565b60006116dd826116b6565b6116e781856116c1565b93506116f78185602086016115f3565b611700816111a0565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611740816110d8565b82525050565b61174f816114e3565b82525050565b60408201600082015161176b6000850182611737565b50602082015161177e6020850182611746565b50505050565b60006117908383611755565b60408301905092915050565b6000602082019050919050565b60006117b48261170b565b6117be8185611716565b93506117c983611727565b8060005b838110156117fa5781516117e18882611784565b97506117ec8361179c565b9250506001810190506117cd565b5085935050505092915050565b600060a083016000830151848203600086015261182482826116d2565b9150506020830151848203602086015261183e82826116d2565b9150506040830151848203604086015261185882826117a9565b915050606083015161186d6060860182611737565b506080830151848203608086015261188582826116d2565b9150508091505092915050565b60006040820190506118a760008301856116a7565b81810360208301526118b98184611807565b90509392505050565b6118cb81611384565b81146118d657600080fd5b50565b6000815190506118e8816118c2565b92915050565b60006020828403121561190457611903610ff3565b5b6000611912848285016118d9565b91505092915050565b60006060820190506119306000830186611452565b8181036020830152611942818561161d565b90506119516040830184611546565b949350505050565b600081905092915050565b50565b6000611974600083611959565b915061197f82611964565b600082019050919050565b600061199582611967565b9150819050919050565b60006060820190506119b46000830186611452565b6119c16020830185611452565b6119ce6040830184611546565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000611a0c6016836115e2565b9150611a17826119d6565b602082019050919050565b60006020820190508181036000830152611a3b816119ff565b9050919050565b600080fd5b600080fd5b600081359050611a5b816118c2565b92915050565b600067ffffffffffffffff821115611a7c57611a7b6111b1565b5b611a85826111a0565b9050602081019050919050565b6000611aa5611aa084611a61565b611211565b905082815260208101848484011115611ac157611ac061119b565b5b611acc84828561125d565b509392505050565b600082601f830112611ae957611ae8611196565b5b8135611af9848260208601611a92565b91505092915050565b600067ffffffffffffffff821115611b1d57611b1c6111b1565b5b602082029050602081019050919050565b600080fd5b600081359050611b42816114ed565b92915050565b600060408284031215611b5e57611b5d611a42565b5b611b686040611211565b90506000611b7884828501611101565b6000830152506020611b8c84828501611b33565b60208301525092915050565b6000611bab611ba684611b02565b611211565b90508083825260208201905060408402830185811115611bce57611bcd611b2e565b5b835b81811015611bf75780611be38882611b48565b845260208401935050604081019050611bd0565b5050509392505050565b600082601f830112611c1657611c15611196565b5b8135611c26848260208601611b98565b91505092915050565b600060a08284031215611c4557611c44611a42565b5b611c4f60a0611211565b90506000611c5f84828501611a4c565b6000830152506020611c7384828501611181565b602083015250604082013567ffffffffffffffff811115611c9757611c96611a47565b5b611ca384828501611ad4565b604083015250606082013567ffffffffffffffff811115611cc757611cc6611a47565b5b611cd384828501611ad4565b606083015250608082013567ffffffffffffffff811115611cf757611cf6611a47565b5b611d0384828501611c01565b60808301525092915050565b6000611d1b3683611c2f565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611d586016836115e2565b9150611d6382611d22565b602082019050919050565b60006020820190508181036000830152611d8781611d4b565b9050919050565b6000611d99826116b6565b611da38185611959565b9350611db38185602086016115f3565b80840191505092915050565b6000611dcb8284611d8e565b915081905092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611e0c6017836115e2565b9150611e1782611dd6565b602082019050919050565b60006020820190508181036000830152611e3b81611dff565b905091905056fea26469706673582212205c7a98cc8a91d2c7a7c6f1c76c9258707bed118f73c9224518c96c668faf142c64736f6c63430008130033";

type DestinationMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationMinter__factory extends ContractFactory {
  constructor(...args: DestinationMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router,
      link,
      nftAddress,
      overrides || {}
    );
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, nftAddress, overrides || {}) as Promise<
      DestinationMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DestinationMinter__factory {
    return super.connect(runner) as DestinationMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationMinterInterface {
    return new Interface(_abi) as DestinationMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DestinationMinter {
    return new Contract(address, _abi, runner) as unknown as DestinationMinter;
  }
}
