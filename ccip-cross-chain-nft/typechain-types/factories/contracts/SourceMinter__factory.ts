/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SourceMinter,
  SourceMinterInterface,
} from "../../contracts/SourceMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "address",
        name: "gho",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "WinnerSelected",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum SourceMinter.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
    ],
    name: "setWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620023e5380380620023e58339818101604052810190620000389190620004c8565b82338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a59062000585565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001355762000134816200032f60201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001ad5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620001a49190620005b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff168152505060c05173ffffffffffffffffffffffffffffffffffffffff1663095ea7b360a0517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620002df929190620005f0565b6020604051808303816000875af1158015620002ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032591906200065a565b50505050620006fe565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200039790620006dc565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004908262000463565b9050919050565b620004a28162000483565b8114620004ae57600080fd5b50565b600081519050620004c28162000497565b92915050565b600080600060608486031215620004e457620004e36200045e565b5b6000620004f486828701620004b1565b93505060206200050786828701620004b1565b92505060406200051a86828701620004b1565b9150509250925092565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200056d60188362000524565b91506200057a8262000535565b602082019050919050565b60006020820190508181036000830152620005a0816200055e565b9050919050565b620005b28162000483565b82525050565b6000602082019050620005cf6000830184620005a7565b92915050565b6000819050919050565b620005ea81620005d5565b82525050565b6000604082019050620006076000830185620005a7565b620006166020830184620005df565b9392505050565b60008115159050919050565b62000634816200061d565b81146200064057600080fd5b50565b600081519050620006548162000629565b92915050565b6000602082840312156200067357620006726200045e565b5b6000620006838482850162000643565b91505092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620006c460178362000524565b9150620006d1826200068c565b602082019050919050565b60006020820190508181036000830152620006f781620006b5565b9050919050565b60805160a05160c05160e051611c8d6200075860003960005050600081816109b80152610ad7015260008181610a0c01528181610b1301528181610b960152610c3b0152600081816106ae015261077e0152611c8d6000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b1461017b578063b0f479a1146101a6578063d9fca769146101d1578063dfbf53ae146101fa578063ec99afa214610225578063f2fde38b1461024e576100a7565b806301ffc9a7146100ac5780633aeac4e1146100e957806351cff8d91461011257806379ba50971461013b57806385572ffb14610152576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611046565b610277565b6040516100e0919061108e565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611107565b610349565b005b34801561011e57600080fd5b5061013960048036038101906101349190611147565b610453565b005b34801561014757600080fd5b50610150610517565b005b34801561015e57600080fd5b5061017960048036038101906101749190611198565b6106ac565b005b34801561018757600080fd5b50610190610751565b60405161019d91906111f0565b60405180910390f35b3480156101b257600080fd5b506101bb61077a565b6040516101c891906111f0565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f39190611147565b6107a2565b005b34801561020657600080fd5b5061020f61083f565b60405161021c91906111f0565b60405180910390f35b34801561023157600080fd5b5061024c60048036038101906102479190611270565b610865565b005b34801561025a57600080fd5b5061027560048036038101906102709190611147565b610d1a565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034257507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b610351610d2e565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161038c91906111f0565b602060405180830381865afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd91906112f9565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b815260040161040a929190611335565b6020604051808303816000875af1158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d919061138a565b50505050565b61045b610d2e565b600047905060008273ffffffffffffffffffffffffffffffffffffffff1682604051610486906113e8565b60006040518083038185875af1925050503d80600081146104c3576040519150601f19603f3d011682016040523d82523d6000602084013e6104c8565b606091505b5050905080610512573383836040517f9d11f563000000000000000000000000000000000000000000000000000000008152600401610509939291906113fd565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e90611491565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073c57336040517fd7f7333400000000000000000000000000000000000000000000000000000000815260040161073391906111f0565b60405180910390fd5b61074e8161074990611844565b610dbe565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1d4c260f1824cd028e6c9e6e31c3a0b94f2513e7a641113ec759d382f9bdd5a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161083491906111f0565b60405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040518060a001604052808460405160200161088391906111f0565b6040516020818303038152906040528152602001336040516024016108a891906111f0565b6040516020818303038152906040527f6a627842000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508152602001600067ffffffffffffffff811115610945576109446114c7565b5b60405190808252806020026020018201604052801561097e57816020015b61096b610faa565b8152602001906001900390816109635790505b50815260200160018081111561099757610996611857565b5b8460018111156109aa576109a9611857565b5b146109b65760006109d8565b7f00000000000000000000000000000000000000000000000000000000000000005b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded86846040518363ffffffff1660e01b8152600401610a65929190611a9b565b602060405180830381865afa158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa691906112f9565b90506000600180811115610abd57610abc611857565b5b846001811115610ad057610acf611857565b5b03610c39577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610b50929190611335565b6020604051808303816000875af1158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b93919061138a565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f987856040518363ffffffff1660e01b8152600401610bef929190611a9b565b6020604051808303816000875af1158015610c0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c329190611ae0565b9050610cdb565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f98388866040518463ffffffff1660e01b8152600401610c95929190611a9b565b60206040518083038185885af1158015610cb3573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610cd89190611ae0565b90505b7f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a81604051610d0a9190611b1c565b60405180910390a1505050505050565b610d22610d2e565b610d2b81610e7e565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390611b83565b60405180910390fd5b565b60003073ffffffffffffffffffffffffffffffffffffffff168260600151604051610de99190611bd4565b6000604051808303816000865af19150503d8060008114610e26576040519150601f19603f3d011682016040523d82523d6000602084013e610e2b565b606091505b5050905080610e3957600080fd5b6000826000015190507fe29dc34207c78fc0f6048a32f159139c33339c6d6df8b07dcd33f6d699ff232781604051610e719190611b1c565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390611c37565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61102381610fee565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b60006020828403121561105c5761105b610fe4565b5b600061106a84828501611031565b91505092915050565b60008115159050919050565b61108881611073565b82525050565b60006020820190506110a3600083018461107f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110d4826110a9565b9050919050565b6110e4816110c9565b81146110ef57600080fd5b50565b600081359050611101816110db565b92915050565b6000806040838503121561111e5761111d610fe4565b5b600061112c858286016110f2565b925050602061113d858286016110f2565b9150509250929050565b60006020828403121561115d5761115c610fe4565b5b600061116b848285016110f2565b91505092915050565b600080fd5b600060a0828403121561118f5761118e611174565b5b81905092915050565b6000602082840312156111ae576111ad610fe4565b5b600082013567ffffffffffffffff8111156111cc576111cb610fe9565b5b6111d884828501611179565b91505092915050565b6111ea816110c9565b82525050565b600060208201905061120560008301846111e1565b92915050565b600067ffffffffffffffff82169050919050565b6112288161120b565b811461123357600080fd5b50565b6000813590506112458161121f565b92915050565b6002811061125857600080fd5b50565b60008135905061126a8161124b565b92915050565b60008060006060848603121561128957611288610fe4565b5b600061129786828701611236565b93505060206112a8868287016110f2565b92505060406112b98682870161125b565b9150509250925092565b6000819050919050565b6112d6816112c3565b81146112e157600080fd5b50565b6000815190506112f3816112cd565b92915050565b60006020828403121561130f5761130e610fe4565b5b600061131d848285016112e4565b91505092915050565b61132f816112c3565b82525050565b600060408201905061134a60008301856111e1565b6113576020830184611326565b9392505050565b61136781611073565b811461137257600080fd5b50565b6000815190506113848161135e565b92915050565b6000602082840312156113a05761139f610fe4565b5b60006113ae84828501611375565b91505092915050565b600081905092915050565b50565b60006113d26000836113b7565b91506113dd826113c2565b600082019050919050565b60006113f3826113c5565b9150819050919050565b600060608201905061141260008301866111e1565b61141f60208301856111e1565b61142c6040830184611326565b949350505050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061147b601683611434565b915061148682611445565b602082019050919050565b600060208201905081810360008301526114aa8161146e565b9050919050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114ff826114b6565b810181811067ffffffffffffffff8211171561151e5761151d6114c7565b5b80604052505050565b6000611531610fda565b905061153d82826114f6565b919050565b600080fd5b6000819050919050565b61155a81611547565b811461156557600080fd5b50565b60008135905061157781611551565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156115a2576115a16114c7565b5b6115ab826114b6565b9050602081019050919050565b82818337600083830152505050565b60006115da6115d584611587565b611527565b9050828152602081018484840111156115f6576115f5611582565b5b6116018482856115b8565b509392505050565b600082601f83011261161e5761161d61157d565b5b813561162e8482602086016115c7565b91505092915050565b600067ffffffffffffffff821115611652576116516114c7565b5b602082029050602081019050919050565b600080fd5b600081359050611677816112cd565b92915050565b600060408284031215611693576116926114b1565b5b61169d6040611527565b905060006116ad848285016110f2565b60008301525060206116c184828501611668565b60208301525092915050565b60006116e06116db84611637565b611527565b9050808382526020820190506040840283018581111561170357611702611663565b5b835b8181101561172c5780611718888261167d565b845260208401935050604081019050611705565b5050509392505050565b600082601f83011261174b5761174a61157d565b5b813561175b8482602086016116cd565b91505092915050565b600060a0828403121561177a576117796114b1565b5b61178460a0611527565b9050600061179484828501611568565b60008301525060206117a884828501611236565b602083015250604082013567ffffffffffffffff8111156117cc576117cb611542565b5b6117d884828501611609565b604083015250606082013567ffffffffffffffff8111156117fc576117fb611542565b5b61180884828501611609565b606083015250608082013567ffffffffffffffff81111561182c5761182b611542565b5b61183884828501611736565b60808301525092915050565b60006118503683611764565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61188f8161120b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118cf5780820151818401526020810190506118b4565b60008484015250505050565b60006118e682611895565b6118f081856118a0565b93506119008185602086016118b1565b611909816114b6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611949816110c9565b82525050565b611958816112c3565b82525050565b6040820160008201516119746000850182611940565b506020820151611987602085018261194f565b50505050565b6000611999838361195e565b60408301905092915050565b6000602082019050919050565b60006119bd82611914565b6119c7818561191f565b93506119d283611930565b8060005b83811015611a035781516119ea888261198d565b97506119f5836119a5565b9250506001810190506119d6565b5085935050505092915050565b600060a0830160008301518482036000860152611a2d82826118db565b91505060208301518482036020860152611a4782826118db565b91505060408301518482036040860152611a6182826119b2565b9150506060830151611a766060860182611940565b5060808301518482036080860152611a8e82826118db565b9150508091505092915050565b6000604082019050611ab06000830185611886565b8181036020830152611ac28184611a10565b90509392505050565b600081519050611ada81611551565b92915050565b600060208284031215611af657611af5610fe4565b5b6000611b0484828501611acb565b91505092915050565b611b1681611547565b82525050565b6000602082019050611b316000830184611b0d565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611b6d601683611434565b9150611b7882611b37565b602082019050919050565b60006020820190508181036000830152611b9c81611b60565b9050919050565b6000611bae82611895565b611bb881856113b7565b9350611bc88185602086016118b1565b80840191505092915050565b6000611be08284611ba3565b915081905092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611c21601783611434565b9150611c2c82611beb565b602082019050919050565b60006020820190508181036000830152611c5081611c14565b905091905056fea26469706673582212208fe8eebd2ae9340c7ad02d9451aa6f14021d0f5dc9b28963fe00f6dc769c7a8f64736f6c63430008130033";

type SourceMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SourceMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SourceMinter__factory extends ContractFactory {
  constructor(...args: SourceMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    gho: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, link, gho, overrides || {});
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    gho: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, gho, overrides || {}) as Promise<
      SourceMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SourceMinter__factory {
    return super.connect(runner) as SourceMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SourceMinterInterface {
    return new Interface(_abi) as SourceMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SourceMinter {
    return new Contract(address, _abi, runner) as unknown as SourceMinter;
  }
}
